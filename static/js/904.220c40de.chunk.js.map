{"version":3,"file":"static/js/904.220c40de.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.component.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.component.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nconst StyledForm = styled.div`\n  display: block;\n  margin: 0 auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.25);\n`;\n\nStyledForm.Form = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  background-color: #f7f7f7;\n  outline: solid 1px gray;\n  padding: 10px;\n`;\n\nStyledForm.Input = styled(Field)`\n  font-size: 20px;\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 99%;\n`;\n\nStyledForm.Label = styled.label`\n  font-size: 20px;\n  font-weight: 700;\n  color: #444444;\n  width: 100%;\n`;\n\nStyledForm.Error = styled(ErrorMessage)`\n  font-size: 14px;\n  font-weight: 400;\n  font-style: italic;\n  color: red;\n  padding-left: 20px;\n`;\n\nStyledForm.Button = styled.button`\n  padding: 5px;\n  font-size: 20px;\n  font-weight: 300;\n  width: 50%;\n  margin: 0 auto;\n  margin-top: 10px;\n`;\n\nexport default StyledForm;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport StyledForm from './ContactForm.component';\nimport Container from '../Container/Container';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../store/operations';\nimport { getContacts } from '../../store/selectors';\n\nconst phoneRegExp = '^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$';\n// /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst nameRegExp = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Name is Required field'),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number must be like +919367788755')\n    .required('Number is Required field'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    //    onContactAdd(values);\n    console.log('submitted: ', values.name);\n    if (\n      contacts.find(el => el.name.toLowerCase() === values.name.toLowerCase())\n    ) {\n      alert(`${values.contactName} is already exists in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <StyledForm>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <StyledForm.Form>\n            <StyledForm.Label>\n              Contact Name:\n              <StyledForm.Error name=\"name\" component=\"span\" />\n              <StyledForm.Input type=\"text\" name=\"name\" />\n            </StyledForm.Label>\n            <StyledForm.Label>\n              Phone Number:\n              <StyledForm.Error name=\"number\" component=\"span\" />\n              <StyledForm.Input type=\"tel\" name=\"number\" />\n            </StyledForm.Label>\n            <StyledForm.Button type=\"submit\">Add Contact</StyledForm.Button>\n          </StyledForm.Form>\n        </Formik>\n      </StyledForm>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nconst StyledList = styled.div`\n  display: block;\n  margin: 0 auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: #f7f7f7;\n  outline: solid 1px #444444;\n`;\n\nStyledList.Table = styled.table`\n  width: 100%;\n`;\n\nStyledList.Td = styled.td`\n  text-align: center;\n  padding: 4px;\n`;\n\nStyledList.Tr = styled.tr`\n  &:nth-of-type(even) {\n    background-color: #e7e7e7;\n  }\n  &:hover {\n    background-color: #aaa;\n  }\n`;\n\nStyledList.Th = styled.th`\n  background-color: #222222;\n  color: white;\n  padding: 4px;\n`;\n\nStyledList.Btn = styled.button`\n  background-color: #8d0f0f;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 700;\n  padding: 3px;\n  width: 20px;\n`;\n\nexport default StyledList;\n","import StyledList from './ContactList.component';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../store/operations';\nimport {\n  getFilteredContacts,\n  getError,\n  getIsLoading,\n} from '../../store/selectors';\n\nimport Container from '../Container/Container';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  // const contacts = useSelector(getSortedContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <StyledList>\n        {isLoading && <b>Loading Contacts...</b>}\n        {error && <b>{error}</b>}\n        {contacts.length > 0 && (\n          <>\n            <h2>\n              Contacts\n              <span style={{ fontWeight: 400 }}>\n                {' '}\n                | {contacts.length} items\n              </span>\n            </h2>\n            <StyledList.Table>\n              <thead>\n                <tr>\n                  <StyledList.Th>Name</StyledList.Th>\n                  <StyledList.Th>Phone Number</StyledList.Th>\n                  <StyledList.Th>Delete</StyledList.Th>\n                </tr>\n              </thead>\n              <tbody>\n                {contacts.map(el => (\n                  <StyledList.Tr key={el.id}>\n                    <StyledList.Td>{el.name}</StyledList.Td>\n                    <StyledList.Td>{el.number}</StyledList.Td>\n                    <StyledList.Td>\n                      <StyledList.Btn\n                        onClick={() => dispatch(deleteContact(el.id))}\n                        id={el.id}\n                      >\n                        X\n                      </StyledList.Btn>\n                    </StyledList.Td>\n                  </StyledList.Tr>\n                ))}\n              </tbody>\n            </StyledList.Table>\n          </>\n        )}\n      </StyledList>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\n// import { SearchForm } from '../components/SearchForm/SearchForm';\nimport { selectUser } from 'store/authSelectors';\nimport { useSelector } from 'react-redux';\n\nexport default function ContactsPage() {\n  const userName = useSelector(selectUser).name;\n  return (\n    <>\n      <Helmet>\n        <title>{userName} Contacts</title>\n      </Helmet>\n      <ContactForm />\n      {/* <SearchForm /> */}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","Input","Field","Label","Error","ErrorMessage","Button","schema","yup","shape","name","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","Container","onSubmit","values","resetForm","console","log","find","el","toLowerCase","alert","contactName","addContact","validationSchema","component","type","StyledList","Table","Td","Tr","Th","Btn","ContactList","getFilteredContacts","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","length","style","fontWeight","map","onClick","deleteContact","id","ContactsPage","userName","selectUser","Helmet"],"sourceRoot":""}